while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
?plot_ly
plot_ly(iris, y=~Petal.Length, mode = "box")
plot_ly(iris, y=~Petal.Length, type = "box")
plot_ly(iris, y=~Petal.Length, type = "box")$stat
plot_ly(iris, y=~Petal.Length, type = "box")$stats
plot_ly(iris, y=~Petal.Length, type = "box")$res
plotly_json(plot_ly(iris, y=~Petal.Length, type = "box"))
install.packages("listviewer")
library("listviewer")
plotly_json(plot_ly(iris, y=~Petal.Length, type = "box"))
quantile(iris, c(0.25, 0.5, 0.75), type=c(5,7)[(N %% 2) + 1]))
quantile(iris, c(0.25, 0.5, 0.75), type=c(5,7)[(N %% 2) + 1])
quantile(iris, c(0.25, 0.5, 0.75), type=c(5,7)[(NROW(iris) %% 2) + 1])
quantile(iris$Petal.Length, c(0.25, 0.5, 0.75), type=c(5,7)[(NROW(iris) %% 2) + 1])
plot_ly(iris, y=~Petal.Length, type = "box")$res
plot_ly(iris, y=~Petal.Length, type = "box")
fivenum(iris$Petal.Length)
fivenum(mtcars)
fivenum(mtcars$mpg)
plot_ly(mtcars, y=~mpg, type = "box")
length(mtcars$mpg)
length(iris$Petal.Length)
austen_books()[1:151,]
View(ekopepokfkopfrk)
View(ekopepokfkopfrk)
ekopepokfkopfrk[[2]]
ekopepokfkopfrk[[4]]
length(ekopepokfkopfrk[[4]])
fivenum(ekopepokfkopfrk[[4]])
plot_ly(ekopepokfkopfrk[[4]], type = "box")
eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo <- after.choose.token(austen_books()[1:151,])
eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo <- after.choose.token(austen_books()[1:151,],1,1,1)
eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[2]]
eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]]
NROW(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]])
eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo <- after.choose.token(austen_books()[1:152,],1,1,1)
NROW(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]])
eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo <- after.choose.token(austen_books()[1:154,],1,1,1)
NROW(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]])
plot_ly(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]], y =~freq type = "box")
plot_ly(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]], y =~freq, type = "box")
fivenum(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]])
fivenum(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]]$freq)
boxplot.stats(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]]$freq)
eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo <- after.choose.token(austen_books()[1:54,],1,1,1)
NROW(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]])
plot_ly(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]], y =~freq, type = "box")
boxplot.stats(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]]$freq)
fivenum(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]]$freq)
quantile(eofkpoerpkgrkposfgkpofskpofskpogrspokgrkpogrkpozgpoegfzkpo[[3]]$freq, c(0.25, 0.5, 0.75), type=c(5,7)[(NROW(iris) %% 2) + 1])
quantile(iris[1:51,], c(0.25, 0.5, 0.75), type=c(5,7)[(N %% 2) + 1])
quantile(iris[1:51,], c(0.25, 0.5, 0.75), type=c(5,7)[(51 %% 2) + 1])
quantile(iris$Petal.Length[1:51,], c(0.25, 0.5, 0.75), type=c(5,7)[(51 %% 2) + 1])
iris$Petal.Length[1:51,]
iris$Petal.Length
iris$Petal.Length[1:51]
length(iris$Petal.Length[1:51])
quantile(iris$Petal.Length[1:51], c(0.25, 0.5, 0.75), type=c(5,7)[(51 %% 2) + 1])
fivenum(iris$Petal.Length[1:51])
plot_ly(iris, y =iris$Petal.Length[1:51], type = "box")
boxplot(iris$Petal.Length[1:51])
boxplot.stats(iris$Petal.Length[1:51])
plot_ly(iris, y =iris$Petal.Length[1:51], type = "box")
boxplot.stats(iris$Petal.Length[1:50])
plot_ly(iris, y =iris$Petal.Length[1:50], type = "box")
plot_ly(iris, y =iris$Petal.Length[1:151], type = "box")
boxplot.stats(iris$Petal.Length[1:151])
boxplot.stats(iris$Petal.Length[1:151])$stats
################################ USER CHANGE ############################################
#Write your path to go to your file.
#This path should be the path before the folder you just downloaded on GitHub.
#For instance, if the path to the folder "app" in the folder you downloaded on GitHub is "C:/Users/Projet/Intership_NLP_CU/app"
#Then you should put "C:/Users/Projet/Intership_NLP_CU" as my_path.
my_path <- "C:/Users/Projet/Intership_NLP_CU-master"
# my_path <- "C:/Users/rubik/Desktop/Intership_NLP_CU-master"
#For us to debug the programm
DEBUG = TRUE
################################# Load the libraries and install the packages if not  #################################################
lien <- paste(my_path,"/install_packages.R", sep="")
source(lien)
####################################   Doing the choices for the check boxes  ##########################################################
n.tokenizer.sentence <- length(list.files(paste(my_path,"/preprocessing/tokenizer_sentence/", sep = "")))
n.tokenizer.word <- length(list.files(paste(my_path,"/preprocessing/tokenizer_word/", sep="")))
n.normalization <- length(list.files(paste(my_path,"/preprocessing/normalization/", sep="")))
n.type.data <- length(list.files(paste(my_path,"/load_data/", sep="")))
check_choices_token_sentence_check <- c()
check_choices_token_word_check <- c()
check_choices_token_norma_check <- c()
check_choices_load_data <- c()
count_1 = 1
while(count_1 <= n.tokenizer.sentence){
b_paste_local <- toString(count_1)
check_choices_token_sentence_check <- c(check_choices_token_sentence_check, b_paste_local)
count_1 =count_1 +1
}
count_2 = 1
while(count_2 <= n.tokenizer.word){
c_paste_local <- toString(count_2)
check_choices_token_word_check <- c(check_choices_token_word_check, c_paste_local)
count_2 =count_2 +1
}
count_3 = 1
while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
################################ USER CHANGE ############################################
#Write your path to go to your file.
#This path should be the path before the folder you just downloaded on GitHub.
#For instance, if the path to the folder "app" in the folder you downloaded on GitHub is "C:/Users/Projet/Intership_NLP_CU/app"
#Then you should put "C:/Users/Projet/Intership_NLP_CU" as my_path.
my_path <- "C:/Users/Projet/Intership_NLP_CU-master"
# my_path <- "C:/Users/rubik/Desktop/Intership_NLP_CU-master"
#For us to debug the programm
DEBUG = TRUE
################################# Load the libraries and install the packages if not  #################################################
lien <- paste(my_path,"/install_packages.R", sep="")
source(lien)
####################################   Doing the choices for the check boxes  ##########################################################
n.tokenizer.sentence <- length(list.files(paste(my_path,"/preprocessing/tokenizer_sentence/", sep = "")))
n.tokenizer.word <- length(list.files(paste(my_path,"/preprocessing/tokenizer_word/", sep="")))
n.normalization <- length(list.files(paste(my_path,"/preprocessing/normalization/", sep="")))
n.type.data <- length(list.files(paste(my_path,"/load_data/", sep="")))
check_choices_token_sentence_check <- c()
check_choices_token_word_check <- c()
check_choices_token_norma_check <- c()
check_choices_load_data <- c()
count_1 = 1
while(count_1 <= n.tokenizer.sentence){
b_paste_local <- toString(count_1)
check_choices_token_sentence_check <- c(check_choices_token_sentence_check, b_paste_local)
count_1 =count_1 +1
}
count_2 = 1
while(count_2 <= n.tokenizer.word){
c_paste_local <- toString(count_2)
check_choices_token_word_check <- c(check_choices_token_word_check, c_paste_local)
count_2 =count_2 +1
}
count_3 = 1
while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
################################ USER CHANGE ############################################
#Write your path to go to your file.
#This path should be the path before the folder you just downloaded on GitHub.
#For instance, if the path to the folder "app" in the folder you downloaded on GitHub is "C:/Users/Projet/Intership_NLP_CU/app"
#Then you should put "C:/Users/Projet/Intership_NLP_CU" as my_path.
my_path <- "C:/Users/Projet/Intership_NLP_CU-master"
# my_path <- "C:/Users/rubik/Desktop/Intership_NLP_CU-master"
#For us to debug the programm
DEBUG = TRUE
################################# Load the libraries and install the packages if not  #################################################
lien <- paste(my_path,"/install_packages.R", sep="")
source(lien)
####################################   Doing the choices for the check boxes  ##########################################################
n.tokenizer.sentence <- length(list.files(paste(my_path,"/preprocessing/tokenizer_sentence/", sep = "")))
n.tokenizer.word <- length(list.files(paste(my_path,"/preprocessing/tokenizer_word/", sep="")))
n.normalization <- length(list.files(paste(my_path,"/preprocessing/normalization/", sep="")))
n.type.data <- length(list.files(paste(my_path,"/load_data/", sep="")))
check_choices_token_sentence_check <- c()
check_choices_token_word_check <- c()
check_choices_token_norma_check <- c()
check_choices_load_data <- c()
count_1 = 1
while(count_1 <= n.tokenizer.sentence){
b_paste_local <- toString(count_1)
check_choices_token_sentence_check <- c(check_choices_token_sentence_check, b_paste_local)
count_1 =count_1 +1
}
count_2 = 1
while(count_2 <= n.tokenizer.word){
c_paste_local <- toString(count_2)
check_choices_token_word_check <- c(check_choices_token_word_check, c_paste_local)
count_2 =count_2 +1
}
count_3 = 1
while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
################################ USER CHANGE ############################################
#Write your path to go to your file.
#This path should be the path before the folder you just downloaded on GitHub.
#For instance, if the path to the folder "app" in the folder you downloaded on GitHub is "C:/Users/Projet/Intership_NLP_CU/app"
#Then you should put "C:/Users/Projet/Intership_NLP_CU" as my_path.
my_path <- "C:/Users/Projet/Intership_NLP_CU-master"
# my_path <- "C:/Users/rubik/Desktop/Intership_NLP_CU-master"
#For us to debug the programm
DEBUG = TRUE
################################# Load the libraries and install the packages if not  #################################################
lien <- paste(my_path,"/install_packages.R", sep="")
source(lien)
####################################   Doing the choices for the check boxes  ##########################################################
n.tokenizer.sentence <- length(list.files(paste(my_path,"/preprocessing/tokenizer_sentence/", sep = "")))
n.tokenizer.word <- length(list.files(paste(my_path,"/preprocessing/tokenizer_word/", sep="")))
n.normalization <- length(list.files(paste(my_path,"/preprocessing/normalization/", sep="")))
n.type.data <- length(list.files(paste(my_path,"/load_data/", sep="")))
check_choices_token_sentence_check <- c()
check_choices_token_word_check <- c()
check_choices_token_norma_check <- c()
check_choices_load_data <- c()
count_1 = 1
while(count_1 <= n.tokenizer.sentence){
b_paste_local <- toString(count_1)
check_choices_token_sentence_check <- c(check_choices_token_sentence_check, b_paste_local)
count_1 =count_1 +1
}
count_2 = 1
while(count_2 <= n.tokenizer.word){
c_paste_local <- toString(count_2)
check_choices_token_word_check <- c(check_choices_token_word_check, c_paste_local)
count_2 =count_2 +1
}
count_3 = 1
while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
################################ USER CHANGE ############################################
#Write your path to go to your file.
#This path should be the path before the folder you just downloaded on GitHub.
#For instance, if the path to the folder "app" in the folder you downloaded on GitHub is "C:/Users/Projet/Intership_NLP_CU/app"
#Then you should put "C:/Users/Projet/Intership_NLP_CU" as my_path.
my_path <- "C:/Users/Projet/Intership_NLP_CU-master"
# my_path <- "C:/Users/rubik/Desktop/Intership_NLP_CU-master"
#For us to debug the programm
DEBUG = TRUE
################################# Load the libraries and install the packages if not  #################################################
lien <- paste(my_path,"/install_packages.R", sep="")
source(lien)
####################################   Doing the choices for the check boxes  ##########################################################
n.tokenizer.sentence <- length(list.files(paste(my_path,"/preprocessing/tokenizer_sentence/", sep = "")))
n.tokenizer.word <- length(list.files(paste(my_path,"/preprocessing/tokenizer_word/", sep="")))
n.normalization <- length(list.files(paste(my_path,"/preprocessing/normalization/", sep="")))
n.type.data <- length(list.files(paste(my_path,"/load_data/", sep="")))
check_choices_token_sentence_check <- c()
check_choices_token_word_check <- c()
check_choices_token_norma_check <- c()
check_choices_load_data <- c()
count_1 = 1
while(count_1 <= n.tokenizer.sentence){
b_paste_local <- toString(count_1)
check_choices_token_sentence_check <- c(check_choices_token_sentence_check, b_paste_local)
count_1 =count_1 +1
}
count_2 = 1
while(count_2 <= n.tokenizer.word){
c_paste_local <- toString(count_2)
check_choices_token_word_check <- c(check_choices_token_word_check, c_paste_local)
count_2 =count_2 +1
}
count_3 = 1
while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
boxplot.stats(iris$Petal.Length[1:151])$stats
################################ USER CHANGE ############################################
#Write your path to go to your file.
#This path should be the path before the folder you just downloaded on GitHub.
#For instance, if the path to the folder "app" in the folder you downloaded on GitHub is "C:/Users/Projet/Intership_NLP_CU/app"
#Then you should put "C:/Users/Projet/Intership_NLP_CU" as my_path.
my_path <- "C:/Users/Projet/Intership_NLP_CU-master"
# my_path <- "C:/Users/rubik/Desktop/Intership_NLP_CU-master"
#For us to debug the programm
DEBUG = TRUE
################################# Load the libraries and install the packages if not  #################################################
lien <- paste(my_path,"/install_packages.R", sep="")
source(lien)
####################################   Doing the choices for the check boxes  ##########################################################
n.tokenizer.sentence <- length(list.files(paste(my_path,"/preprocessing/tokenizer_sentence/", sep = "")))
n.tokenizer.word <- length(list.files(paste(my_path,"/preprocessing/tokenizer_word/", sep="")))
n.normalization <- length(list.files(paste(my_path,"/preprocessing/normalization/", sep="")))
n.type.data <- length(list.files(paste(my_path,"/load_data/", sep="")))
check_choices_token_sentence_check <- c()
check_choices_token_word_check <- c()
check_choices_token_norma_check <- c()
check_choices_load_data <- c()
count_1 = 1
while(count_1 <= n.tokenizer.sentence){
b_paste_local <- toString(count_1)
check_choices_token_sentence_check <- c(check_choices_token_sentence_check, b_paste_local)
count_1 =count_1 +1
}
count_2 = 1
while(count_2 <= n.tokenizer.word){
c_paste_local <- toString(count_2)
check_choices_token_word_check <- c(check_choices_token_word_check, c_paste_local)
count_2 =count_2 +1
}
count_3 = 1
while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
################################ USER CHANGE ############################################
#Write your path to go to your file.
#This path should be the path before the folder you just downloaded on GitHub.
#For instance, if the path to the folder "app" in the folder you downloaded on GitHub is "C:/Users/Projet/Intership_NLP_CU/app"
#Then you should put "C:/Users/Projet/Intership_NLP_CU" as my_path.
my_path <- "C:/Users/Projet/Intership_NLP_CU-master"
# my_path <- "C:/Users/rubik/Desktop/Intership_NLP_CU-master"
#For us to debug the programm
DEBUG = TRUE
################################# Load the libraries and install the packages if not  #################################################
lien <- paste(my_path,"/install_packages.R", sep="")
source(lien)
####################################   Doing the choices for the check boxes  ##########################################################
n.tokenizer.sentence <- length(list.files(paste(my_path,"/preprocessing/tokenizer_sentence/", sep = "")))
n.tokenizer.word <- length(list.files(paste(my_path,"/preprocessing/tokenizer_word/", sep="")))
n.normalization <- length(list.files(paste(my_path,"/preprocessing/normalization/", sep="")))
n.type.data <- length(list.files(paste(my_path,"/load_data/", sep="")))
check_choices_token_sentence_check <- c()
check_choices_token_word_check <- c()
check_choices_token_norma_check <- c()
check_choices_load_data <- c()
count_1 = 1
while(count_1 <= n.tokenizer.sentence){
b_paste_local <- toString(count_1)
check_choices_token_sentence_check <- c(check_choices_token_sentence_check, b_paste_local)
count_1 =count_1 +1
}
count_2 = 1
while(count_2 <= n.tokenizer.word){
c_paste_local <- toString(count_2)
check_choices_token_word_check <- c(check_choices_token_word_check, c_paste_local)
count_2 =count_2 +1
}
count_3 = 1
while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
################################ USER CHANGE ############################################
#Write your path to go to your file.
#This path should be the path before the folder you just downloaded on GitHub.
#For instance, if the path to the folder "app" in the folder you downloaded on GitHub is "C:/Users/Projet/Intership_NLP_CU/app"
#Then you should put "C:/Users/Projet/Intership_NLP_CU" as my_path.
my_path <- "C:/Users/Projet/Intership_NLP_CU-master"
# my_path <- "C:/Users/rubik/Desktop/Intership_NLP_CU-master"
#For us to debug the programm
DEBUG = TRUE
################################# Load the libraries and install the packages if not  #################################################
lien <- paste(my_path,"/install_packages.R", sep="")
source(lien)
####################################   Doing the choices for the check boxes  ##########################################################
n.tokenizer.sentence <- length(list.files(paste(my_path,"/preprocessing/tokenizer_sentence/", sep = "")))
n.tokenizer.word <- length(list.files(paste(my_path,"/preprocessing/tokenizer_word/", sep="")))
n.normalization <- length(list.files(paste(my_path,"/preprocessing/normalization/", sep="")))
n.type.data <- length(list.files(paste(my_path,"/load_data/", sep="")))
check_choices_token_sentence_check <- c()
check_choices_token_word_check <- c()
check_choices_token_norma_check <- c()
check_choices_load_data <- c()
count_1 = 1
while(count_1 <= n.tokenizer.sentence){
b_paste_local <- toString(count_1)
check_choices_token_sentence_check <- c(check_choices_token_sentence_check, b_paste_local)
count_1 =count_1 +1
}
count_2 = 1
while(count_2 <= n.tokenizer.word){
c_paste_local <- toString(count_2)
check_choices_token_word_check <- c(check_choices_token_word_check, c_paste_local)
count_2 =count_2 +1
}
count_3 = 1
while(count_3 <= n.normalization){
d_paste_local <- toString(count_3)
check_choices_token_norma_check <- c(check_choices_token_norma_check, d_paste_local)
count_3 =count_3 +1
}
count_4 = 1
while(count_4 <= n.type.data){
e_paste_local <- toString(count_4)
check_choices_load_data <- c(check_choices_load_data, e_paste_local)
count_4 =count_4 +1
}
m <- 400
n <- 20
#########################################################  Running the shiny app ########################################################
lien <- paste(my_path,"/app", sep="")
# launch the a pp with Rstudio
# runApp(lien)
# launch th app in a navigator
runApp(lien, launch.browser = TRUE)
